////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 11/23/2021 13:48:46
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/xilinx__workspace/test1/main.vf -w C:/xilinx__workspace/test1/main.sch
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_main(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_main (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 1ns / 1ps

module counter1and7_MUSER_main(CLK, 
                               beep, 
                               O);

    input CLK;
   output beep;
   output [3:0] O;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire [3:0] O_DUMMY;
   
   assign O[3:0] = O_DUMMY[3:0];
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(CLK), 
                             .CLR(XLXN_15), 
                             .J(XLXN_1), 
                             .K(XLXN_1), 
                             .Q(O_DUMMY[0]));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(CLK), 
                             .CLR(XLXN_14), 
                             .J(XLXN_2), 
                             .K(XLXN_2), 
                             .Q(O_DUMMY[1]));
   (* HU_SET = "XLXI_3_2" *) 
   FJKC_HXILINX_main  XLXI_3 (.C(CLK), 
                             .CLR(XLXN_13), 
                             .J(XLXN_3), 
                             .K(XLXN_3), 
                             .Q(O_DUMMY[2]));
   VCC  XLXI_4 (.P(XLXN_1));
   VCC  XLXI_5 (.P(XLXN_2));
   VCC  XLXI_6 (.P(XLXN_3));
   GND  XLXI_7 (.G(XLXN_13));
   GND  XLXI_8 (.G(XLXN_14));
   GND  XLXI_9 (.G(XLXN_15));
   GND  XLXI_10 (.G(O_DUMMY[3]));
   AND3B3  XLXI_11 (.I0(O_DUMMY[2]), 
                   .I1(O_DUMMY[1]), 
                   .I2(O_DUMMY[0]), 
                   .O(beep));
endmodule
`timescale 1ns / 1ps

module betterBCDto7seg_MUSER_main(Inp, 
                                  A7, 
                                  B7, 
                                  C7, 
                                  D7, 
                                  E7, 
                                  F7, 
                                  G7);

    input [3:0] Inp;
   output A7;
   output B7;
   output C7;
   output D7;
   output E7;
   output F7;
   output G7;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_52;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   
   OR4  XLXI_1 (.I0(Inp[3]), 
               .I1(XLXN_11), 
               .I2(Inp[1]), 
               .I3(XLXN_8), 
               .O(A7));
   AND2  XLXI_2 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .O(XLXN_8));
   INV  XLXI_3 (.I(Inp[2]), 
               .O(XLXN_9));
   INV  XLXI_4 (.I(Inp[0]), 
               .O(XLXN_10));
   OR3  XLXI_5 (.I0(XLXN_17), 
               .I1(XLXN_16), 
               .I2(XLXN_13), 
               .O(B7));
   INV  XLXI_6 (.I(Inp[2]), 
               .O(XLXN_13));
   AND2  XLXI_7 (.I0(XLXN_15), 
                .I1(XLXN_14), 
                .O(XLXN_16));
   INV  XLXI_8 (.I(Inp[1]), 
               .O(XLXN_14));
   INV  XLXI_9 (.I(Inp[0]), 
               .O(XLXN_15));
   AND2  XLXI_10 (.I0(Inp[0]), 
                 .I1(Inp[1]), 
                 .O(XLXN_17));
   OR3  XLXI_11 (.I0(Inp[2]), 
                .I1(Inp[0]), 
                .I2(XLXN_19), 
                .O(C7));
   INV  XLXI_12 (.I(Inp[1]), 
                .O(XLXN_19));
   AND2  XLXI_13 (.I0(XLXN_22), 
                 .I1(XLXN_21), 
                 .O(XLXN_23));
   INV  XLXI_14 (.I(Inp[2]), 
                .O(XLXN_21));
   INV  XLXI_15 (.I(Inp[0]), 
                .O(XLXN_22));
   AND2  XLXI_16 (.I0(Inp[1]), 
                 .I1(XLXN_24), 
                 .O(XLXN_25));
   INV  XLXI_17 (.I(Inp[2]), 
                .O(XLXN_24));
   OR5  XLXI_18 (.I0(Inp[3]), 
                .I1(XLXN_28), 
                .I2(XLXN_27), 
                .I3(XLXN_25), 
                .I4(XLXN_23), 
                .O(D7));
   AND3  XLXI_19 (.I0(Inp[0]), 
                 .I1(XLXN_26), 
                 .I2(Inp[2]), 
                 .O(XLXN_27));
   INV  XLXI_20 (.I(Inp[1]), 
                .O(XLXN_26));
   AND2  XLXI_21 (.I0(XLXN_29), 
                 .I1(Inp[1]), 
                 .O(XLXN_28));
   INV  XLXI_22 (.I(Inp[0]), 
                .O(XLXN_29));
   AND2  XLXI_23 (.I0(XLXN_31), 
                 .I1(XLXN_30), 
                 .O(XLXN_33));
   INV  XLXI_24 (.I(Inp[2]), 
                .O(XLXN_30));
   INV  XLXI_25 (.I(Inp[0]), 
                .O(XLXN_31));
   OR2  XLXI_26 (.I0(XLXN_52), 
                .I1(XLXN_33), 
                .O(E7));
   AND2  XLXI_27 (.I0(XLXN_34), 
                 .I1(Inp[1]), 
                 .O(XLXN_52));
   INV  XLXI_28 (.I(Inp[0]), 
                .O(XLXN_34));
   INV  XLXI_29 (.I(Inp[0]), 
                .O(XLXN_55));
   INV  XLXI_30 (.I(Inp[1]), 
                .O(XLXN_54));
   AND2  XLXI_31 (.I0(XLXN_55), 
                 .I1(XLXN_54), 
                 .O(XLXN_56));
   OR4  XLXI_36 (.I0(Inp[3]), 
                .I1(XLXN_61), 
                .I2(XLXN_62), 
                .I3(XLXN_56), 
                .O(F7));
   INV  XLXI_45 (.I(Inp[1]), 
                .O(XLXN_57));
   AND2  XLXI_46 (.I0(XLXN_57), 
                 .I1(Inp[2]), 
                 .O(XLXN_62));
   INV  XLXI_47 (.I(Inp[0]), 
                .O(XLXN_58));
   AND2  XLXI_48 (.I0(XLXN_58), 
                 .I1(Inp[2]), 
                 .O(XLXN_61));
   OR4  XLXI_49 (.I0(XLXN_70), 
                .I1(Inp[3]), 
                .I2(XLXN_69), 
                .I3(XLXN_68), 
                .O(G7));
   AND2  XLXI_50 (.I0(Inp[1]), 
                 .I1(XLXN_64), 
                 .O(XLXN_68));
   INV  XLXI_51 (.I(Inp[2]), 
                .O(XLXN_64));
   AND2  XLXI_52 (.I0(XLXN_65), 
                 .I1(Inp[2]), 
                 .O(XLXN_69));
   INV  XLXI_53 (.I(Inp[1]), 
                .O(XLXN_65));
   AND2  XLXI_54 (.I0(XLXN_66), 
                 .I1(Inp[2]), 
                 .O(XLXN_70));
   INV  XLXI_55 (.I(Inp[0]), 
                .O(XLXN_66));
   AND2  XLXI_56 (.I0(Inp[0]), 
                 .I1(Inp[2]), 
                 .O(XLXN_11));
endmodule
`timescale 1ns / 1ps

module to_1_2_10_100_1000Hz_MUSER_main(clockIn, 
                                       to1hz, 
                                       to2hz, 
                                       to10hz, 
                                       to100hz, 
                                       to1000hz);

    input clockIn;
   output to1hz;
   output to2hz;
   output to10hz;
   output to100hz;
   output to1000hz;
   
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_73;
   wire XLXN_88;
   wire XLXN_101;
   wire XLXN_115;
   wire XLXN_215;
   wire XLXN_217;
   wire XLXN_233;
   wire XLXN_238;
   wire XLXN_239;
   wire XLXN_240;
   wire XLXN_243;
   
   (* HU_SET = "XLXI_31_3" *) 
   CD4CE_HXILINX_main  XLXI_31 (.C(clockIn), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_43));
   INV  XLXI_32 (.I(XLXN_43), 
                .O(XLXN_49));
   (* HU_SET = "XLXI_33_4" *) 
   CD4CE_HXILINX_main  XLXI_33 (.C(XLXN_49), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_44));
   INV  XLXI_34 (.I(XLXN_44), 
                .O(XLXN_50));
   (* HU_SET = "XLXI_36_5" *) 
   CD4CE_HXILINX_main  XLXI_36 (.C(XLXN_50), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_52));
   INV  XLXI_37 (.I(XLXN_52), 
                .O(XLXN_54));
   (* HU_SET = "XLXI_38_6" *) 
   CD4CE_HXILINX_main  XLXI_38 (.C(XLXN_54), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_53));
   INV  XLXI_39 (.I(XLXN_53), 
                .O(XLXN_101));
   (* HU_SET = "XLXI_52_7" *) 
   CD4CE_HXILINX_main  XLXI_52 (.C(XLXN_101), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_88));
   INV  XLXI_53 (.I(XLXN_88), 
                .O(XLXN_238));
   (* HU_SET = "XLXI_54_8" *) 
   CD4CE_HXILINX_main  XLXI_54 (.C(XLXN_238), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_73));
   INV  XLXI_55 (.I(XLXN_73), 
                .O(XLXN_215));
   (* HU_SET = "XLXI_63_10" *) 
   FJKC_HXILINX_main  XLXI_63 (.C(XLXN_243), 
                              .CLR(), 
                              .J(XLXN_240), 
                              .K(XLXN_240), 
                              .Q(to1hz));
   VCC  XLXI_64 (.P(XLXN_240));
   (* HU_SET = "XLXI_67_9" *) 
   CD4CE_HXILINX_main  XLXI_67 (.C(XLXN_215), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_115));
   INV  XLXI_68 (.I(XLXN_115), 
                .O(XLXN_243));
   BUF  XLXI_69 (.I(XLXN_243), 
                .O(to2hz));
   BUF  XLXI_70 (.I(XLXN_217), 
                .O(to10hz));
   BUF  XLXI_71 (.I(XLXN_233), 
                .O(to100hz));
   BUF  XLXI_72 (.I(XLXN_239), 
                .O(to1000hz));
   (* HU_SET = "XLXI_137_11" *) 
   FJKC_HXILINX_main  XLXI_137 (.C(XLXN_215), 
                               .CLR(), 
                               .J(XLXN_240), 
                               .K(XLXN_240), 
                               .Q(XLXN_217));
   (* HU_SET = "XLXI_138_12" *) 
   FJKC_HXILINX_main  XLXI_138 (.C(XLXN_238), 
                               .CLR(), 
                               .J(XLXN_240), 
                               .K(XLXN_240), 
                               .Q(XLXN_233));
   (* HU_SET = "XLXI_139_13" *) 
   FJKC_HXILINX_main  XLXI_139 (.C(XLXN_101), 
                               .CLR(), 
                               .J(XLXN_240), 
                               .K(XLXN_240), 
                               .Q(XLXN_239));
endmodule
`timescale 1ns / 1ps

module main(CLK, 
            A, 
            B, 
            Buzz, 
            C, 
            Com0, 
            Com1, 
            Com2, 
            Com3, 
            D, 
            E, 
            F, 
            G);

    input CLK;
   output A;
   output B;
   output Buzz;
   output C;
   output Com0;
   output Com1;
   output Com2;
   output Com3;
   output D;
   output E;
   output F;
   output G;
   
   wire [3:0] s;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_5;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_52;
   wire XLXN_62;
   wire XLXN_63;
   wire [3:0] z;
   wire Com0_DUMMY;
   
   assign Com0 = Com0_DUMMY;
   to_1_2_10_100_1000Hz_MUSER_main  XLXI_1 (.clockIn(CLK), 
                                           .to1hz(XLXN_5), 
                                           .to2hz(), 
                                           .to10hz(), 
                                           .to100hz(), 
                                           .to1000hz(XLXN_24));
   (* HU_SET = "XLXI_2_19" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(XLXN_5), 
                             .CLR(XLXN_2), 
                             .J(XLXN_3), 
                             .K(XLXN_3), 
                             .Q(XLXN_62));
   VCC  XLXI_3 (.P(XLXN_3));
   GND  XLXI_4 (.G(XLXN_2));
   (* HU_SET = "XLXI_6_14" *) 
   M2_1_HXILINX_main  XLXI_6 (.D0(z[0]), 
                             .D1(XLXN_13), 
                             .S0(Com0_DUMMY), 
                             .O(s[0]));
   (* HU_SET = "XLXI_7_15" *) 
   M2_1_HXILINX_main  XLXI_7 (.D0(z[1]), 
                             .D1(XLXN_12), 
                             .S0(Com0_DUMMY), 
                             .O(s[1]));
   (* HU_SET = "XLXI_8_16" *) 
   M2_1_HXILINX_main  XLXI_8 (.D0(z[2]), 
                             .D1(XLXN_11), 
                             .S0(Com0_DUMMY), 
                             .O(s[2]));
   (* HU_SET = "XLXI_9_17" *) 
   M2_1_HXILINX_main  XLXI_9 (.D0(z[3]), 
                             .D1(z[3]), 
                             .S0(Com0_DUMMY), 
                             .O(s[3]));
   INV  XLXI_12 (.I(z[2]), 
                .O(XLXN_11));
   INV  XLXI_14 (.I(z[1]), 
                .O(XLXN_12));
   INV  XLXI_15 (.I(z[0]), 
                .O(XLXN_13));
   (* HU_SET = "XLXI_16_18" *) 
   FJKC_HXILINX_main  XLXI_16 (.C(XLXN_24), 
                              .CLR(XLXN_23), 
                              .J(XLXN_25), 
                              .K(XLXN_25), 
                              .Q(Com0_DUMMY));
   VCC  XLXI_17 (.P(XLXN_25));
   GND  XLXI_18 (.G(XLXN_23));
   INV  XLXI_27 (.I(Com0_DUMMY), 
                .O(Com1));
   VCC  XLXI_28 (.P(Com2));
   VCC  XLXI_29 (.P(Com3));
   betterBCDto7seg_MUSER_main  XLXI_30 (.Inp(s[3:0]), 
                                       .A7(A), 
                                       .B7(B), 
                                       .C7(C), 
                                       .D7(D), 
                                       .E7(E), 
                                       .F7(F), 
                                       .G7(G));
   AND2  XLXI_31 (.I0(XLXN_52), 
                 .I1(XLXN_63), 
                 .O(Buzz));
   INV  XLXI_32 (.I(Com0_DUMMY), 
                .O(XLXN_52));
   counter1and7_MUSER_main  XLXI_35 (.CLK(XLXN_62), 
                                    .beep(XLXN_63), 
                                    .O(z[3:0]));
endmodule
