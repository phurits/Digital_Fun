////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ChooseRorG_drc.vf
// /___/   /\     Timestamp : 12/10/2021 14:10:49
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog ChooseRorG_drc.vf -w C:/xilinx__workspace/TickTacToeFinal/ChooseRorG.sch
//Design Name: ChooseRorG
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_ChooseRorG(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module ChooseRorG(Data, 
                  selectGreen, 
                  Selector, 
                  selectRed, 
                  Green, 
                  Red, 
                  TC);

    input Data;
    input selectGreen;
    input Selector;
    input selectRed;
   output Green;
   output Red;
   output TC;
   
   wire XLXN_49;
   wire XLXN_54;
   wire XLXN_63;
   wire XLXN_67;
   wire XLXN_77;
   wire XLXN_79;
   wire XLXN_84;
   wire XLXN_85;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_115;
   wire XLXN_118;
   wire Green_DUMMY;
   wire Red_DUMMY;
   wire TC_DUMMY;
   
   assign Green = Green_DUMMY;
   assign Red = Red_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "XLXI_29_0" *) 
   FJKCE_HXILINX_ChooseRorG  XLXI_29 (.C(XLXN_54), 
                                     .CE(XLXN_118), 
                                     .CLR(XLXN_113), 
                                     .J(XLXN_49), 
                                     .K(XLXN_49), 
                                     .Q(TC_DUMMY));
   VCC  XLXI_30 (.P(XLXN_49));
   AND2  XLXI_35 (.I0(Data), 
                 .I1(Selector), 
                 .O(XLXN_54));
   (* HU_SET = "XLXI_39_1" *) 
   FJKCE_HXILINX_ChooseRorG  XLXI_39 (.C(XLXN_67), 
                                     .CE(XLXN_84), 
                                     .CLR(XLXN_114), 
                                     .J(XLXN_63), 
                                     .K(XLXN_63), 
                                     .Q(Red_DUMMY));
   VCC  XLXI_40 (.P(XLXN_63));
   VCC  XLXI_44 (.P(XLXN_79));
   (* HU_SET = "XLXI_46_2" *) 
   FJKCE_HXILINX_ChooseRorG  XLXI_46 (.C(XLXN_77), 
                                     .CE(XLXN_85), 
                                     .CLR(XLXN_115), 
                                     .J(XLXN_79), 
                                     .K(XLXN_79), 
                                     .Q(Green_DUMMY));
   AND2  XLXI_47 (.I0(TC_DUMMY), 
                 .I1(selectRed), 
                 .O(XLXN_67));
   AND2  XLXI_49 (.I0(TC_DUMMY), 
                 .I1(selectGreen), 
                 .O(XLXN_77));
   NOR2  XLXI_51 (.I0(Green_DUMMY), 
                 .I1(Red_DUMMY), 
                 .O(XLXN_85));
   NOR2  XLXI_52 (.I0(Green_DUMMY), 
                 .I1(Red_DUMMY), 
                 .O(XLXN_84));
   GND  XLXI_64 (.G(XLXN_113));
   GND  XLXI_65 (.G(XLXN_114));
   GND  XLXI_66 (.G(XLXN_115));
   NOR2  XLXI_67 (.I0(Green_DUMMY), 
                 .I1(Red_DUMMY), 
                 .O(XLXN_118));
endmodule
