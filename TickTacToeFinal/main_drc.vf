////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main_drc.vf
// /___/   /\     Timestamp : 12/05/2021 18:09:15
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog main_drc.vf -w C:/xilinx__workspace/TickTacToeFinal/main.sch
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKCE_HXILINX_main(Q, C, CE, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE)
        begin
          if(!J)
          begin
            if(K)
            Q <= 1'b0;
          end
          else
          begin
            if(!K)
            Q <= 1'b1;
            else 
            Q <= !Q;
          end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D4_16E_HXILINX_main (D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, A0, A1, A2, A3, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   output D8;
   output D9;
   output D10;
   output D11;
   output D12;
   output D13;
   output D14;
   output D15;

   input  A0;
   input  A1;
   input  A2;
   input  A3;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;
   reg D8;
   reg D9;
   reg D10;
   reg D11;
   reg D12;
   reg D13;
   reg D14;
   reg D15;

      always @ (A0 or A1 or A2 or A3 or E)
      begin
         if(!E)
           {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0000;
        else
        begin
           case({A3,A2,A1,A0})
             4'b0000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0001;
             4'b0001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0010;
             4'b0010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0100;
             4'b0011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_1000;
             4'b0100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0001_0000;
             4'b0101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0010_0000;
             4'b0110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0100_0000;
             4'b0111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_1000_0000;
             4'b1000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0001_0000_0000;
             4'b1001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0010_0000_0000;
             4'b1010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0100_0000_0000;
             4'b1011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_1000_0000_0000;
             4'b1100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0001_0000_0000_0000;
             4'b1101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0010_0000_0000_0000;
             4'b1110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0100_0000_0000_0000;
             4'b1111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b1000_0000_0000_0000;
          endcase
        end
     end 

endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_main (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 1ns / 1ps

module dataToLed_MUSER_main(Data, 
                            Selector, 
                            G, 
                            R);

    input [3:0] Data;
    input Selector;
   output [8:0] G;
   output [8:0] R;
   
   wire S_green;
   wire S_red;
   wire XLXN_34;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_87;
   wire XLXN_88;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_259;
   wire XLXN_260;
   wire XLXN_289;
   wire XLXN_324;
   wire XLXN_327;
   wire XLXN_330;
   wire XLXN_333;
   wire XLXN_336;
   wire XLXN_339;
   wire XLXN_342;
   wire XLXN_345;
   
   VCC  XLXI_16 (.P(XLXN_34));
   (* HU_SET = "XLXI_81_0" *) 
   D2_4E_HXILINX_main  XLXI_81 (.A0(Selector), 
                               .A1(XLXN_259), 
                               .E(XLXN_260), 
                               .D0(S_red), 
                               .D1(S_green), 
                               .D2(), 
                               .D3());
   GND  XLXI_123 (.G(XLXN_259));
   VCC  XLXI_124 (.P(XLXN_260));
   (* HU_SET = "XLXI_125_1" *) 
   D4_16E_HXILINX_main  XLXI_125 (.A0(Data[0]), 
                                 .A1(Data[1]), 
                                 .A2(Data[2]), 
                                 .A3(Data[3]), 
                                 .E(XLXN_34), 
                                 .D0(XLXN_289), 
                                 .D1(XLXN_324), 
                                 .D2(XLXN_327), 
                                 .D3(XLXN_330), 
                                 .D4(XLXN_333), 
                                 .D5(XLXN_336), 
                                 .D6(XLXN_339), 
                                 .D7(XLXN_342), 
                                 .D8(XLXN_345), 
                                 .D9(), 
                                 .D10(), 
                                 .D11(), 
                                 .D12(), 
                                 .D13(), 
                                 .D14(), 
                                 .D15());
   AND2  XLXI_126 (.I0(XLXN_57), 
                  .I1(XLXN_289), 
                  .O(G[0]));
   AND2  XLXI_127 (.I0(XLXN_289), 
                  .I1(XLXN_58), 
                  .O(R[0]));
   AND2  XLXI_132 (.I0(XLXN_63), 
                  .I1(XLXN_324), 
                  .O(G[1]));
   AND2  XLXI_133 (.I0(XLXN_324), 
                  .I1(XLXN_64), 
                  .O(R[1]));
   AND2  XLXI_134 (.I0(XLXN_67), 
                  .I1(XLXN_327), 
                  .O(G[2]));
   AND2  XLXI_135 (.I0(XLXN_327), 
                  .I1(XLXN_68), 
                  .O(R[2]));
   AND2  XLXI_136 (.I0(XLXN_71), 
                  .I1(XLXN_330), 
                  .O(G[3]));
   AND2  XLXI_137 (.I0(XLXN_330), 
                  .I1(XLXN_72), 
                  .O(R[3]));
   AND2  XLXI_138 (.I0(XLXN_75), 
                  .I1(XLXN_333), 
                  .O(G[4]));
   AND2  XLXI_139 (.I0(XLXN_333), 
                  .I1(XLXN_76), 
                  .O(R[4]));
   AND2  XLXI_140 (.I0(XLXN_79), 
                  .I1(XLXN_336), 
                  .O(G[5]));
   AND2  XLXI_141 (.I0(XLXN_336), 
                  .I1(XLXN_80), 
                  .O(R[5]));
   AND2  XLXI_142 (.I0(XLXN_83), 
                  .I1(XLXN_339), 
                  .O(G[6]));
   AND2  XLXI_143 (.I0(XLXN_339), 
                  .I1(XLXN_84), 
                  .O(R[6]));
   AND2  XLXI_144 (.I0(XLXN_87), 
                  .I1(XLXN_342), 
                  .O(G[7]));
   AND2  XLXI_145 (.I0(XLXN_342), 
                  .I1(XLXN_88), 
                  .O(R[7]));
   AND2  XLXI_146 (.I0(XLXN_91), 
                  .I1(XLXN_345), 
                  .O(G[8]));
   AND2  XLXI_147 (.I0(XLXN_345), 
                  .I1(XLXN_92), 
                  .O(R[8]));
endmodule
`timescale 1ns / 1ps

module betterBCDto7seg_MUSER_main(Inp, 
                                  A7, 
                                  B7, 
                                  C7, 
                                  D7, 
                                  E7, 
                                  F7, 
                                  G7);

    input [3:0] Inp;
   output A7;
   output B7;
   output C7;
   output D7;
   output E7;
   output F7;
   output G7;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_52;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   
   OR4  XLXI_1 (.I0(Inp[3]), 
               .I1(XLXN_11), 
               .I2(Inp[1]), 
               .I3(XLXN_8), 
               .O(A7));
   AND2  XLXI_2 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .O(XLXN_8));
   INV  XLXI_3 (.I(Inp[2]), 
               .O(XLXN_9));
   INV  XLXI_4 (.I(Inp[0]), 
               .O(XLXN_10));
   OR3  XLXI_5 (.I0(XLXN_17), 
               .I1(XLXN_16), 
               .I2(XLXN_13), 
               .O(B7));
   INV  XLXI_6 (.I(Inp[2]), 
               .O(XLXN_13));
   AND2  XLXI_7 (.I0(XLXN_15), 
                .I1(XLXN_14), 
                .O(XLXN_16));
   INV  XLXI_8 (.I(Inp[1]), 
               .O(XLXN_14));
   INV  XLXI_9 (.I(Inp[0]), 
               .O(XLXN_15));
   AND2  XLXI_10 (.I0(Inp[0]), 
                 .I1(Inp[1]), 
                 .O(XLXN_17));
   OR3  XLXI_11 (.I0(Inp[2]), 
                .I1(Inp[0]), 
                .I2(XLXN_19), 
                .O(C7));
   INV  XLXI_12 (.I(Inp[1]), 
                .O(XLXN_19));
   AND2  XLXI_13 (.I0(XLXN_22), 
                 .I1(XLXN_21), 
                 .O(XLXN_23));
   INV  XLXI_14 (.I(Inp[2]), 
                .O(XLXN_21));
   INV  XLXI_15 (.I(Inp[0]), 
                .O(XLXN_22));
   AND2  XLXI_16 (.I0(Inp[1]), 
                 .I1(XLXN_24), 
                 .O(XLXN_25));
   INV  XLXI_17 (.I(Inp[2]), 
                .O(XLXN_24));
   OR5  XLXI_18 (.I0(Inp[3]), 
                .I1(XLXN_28), 
                .I2(XLXN_27), 
                .I3(XLXN_25), 
                .I4(XLXN_23), 
                .O(D7));
   AND3  XLXI_19 (.I0(Inp[0]), 
                 .I1(XLXN_26), 
                 .I2(Inp[2]), 
                 .O(XLXN_27));
   INV  XLXI_20 (.I(Inp[1]), 
                .O(XLXN_26));
   AND2  XLXI_21 (.I0(XLXN_29), 
                 .I1(Inp[1]), 
                 .O(XLXN_28));
   INV  XLXI_22 (.I(Inp[0]), 
                .O(XLXN_29));
   AND2  XLXI_23 (.I0(XLXN_31), 
                 .I1(XLXN_30), 
                 .O(XLXN_33));
   INV  XLXI_24 (.I(Inp[2]), 
                .O(XLXN_30));
   INV  XLXI_25 (.I(Inp[0]), 
                .O(XLXN_31));
   OR2  XLXI_26 (.I0(XLXN_52), 
                .I1(XLXN_33), 
                .O(E7));
   AND2  XLXI_27 (.I0(XLXN_34), 
                 .I1(Inp[1]), 
                 .O(XLXN_52));
   INV  XLXI_28 (.I(Inp[0]), 
                .O(XLXN_34));
   INV  XLXI_29 (.I(Inp[0]), 
                .O(XLXN_55));
   INV  XLXI_30 (.I(Inp[1]), 
                .O(XLXN_54));
   AND2  XLXI_31 (.I0(XLXN_55), 
                 .I1(XLXN_54), 
                 .O(XLXN_56));
   OR4  XLXI_36 (.I0(Inp[3]), 
                .I1(XLXN_61), 
                .I2(XLXN_62), 
                .I3(XLXN_56), 
                .O(F7));
   INV  XLXI_45 (.I(Inp[1]), 
                .O(XLXN_57));
   AND2  XLXI_46 (.I0(XLXN_57), 
                 .I1(Inp[2]), 
                 .O(XLXN_62));
   INV  XLXI_47 (.I(Inp[0]), 
                .O(XLXN_58));
   AND2  XLXI_48 (.I0(XLXN_58), 
                 .I1(Inp[2]), 
                 .O(XLXN_61));
   OR4  XLXI_49 (.I0(XLXN_70), 
                .I1(Inp[3]), 
                .I2(XLXN_69), 
                .I3(XLXN_68), 
                .O(G7));
   AND2  XLXI_50 (.I0(Inp[1]), 
                 .I1(XLXN_64), 
                 .O(XLXN_68));
   INV  XLXI_51 (.I(Inp[2]), 
                .O(XLXN_64));
   AND2  XLXI_52 (.I0(XLXN_65), 
                 .I1(Inp[2]), 
                 .O(XLXN_69));
   INV  XLXI_53 (.I(Inp[1]), 
                .O(XLXN_65));
   AND2  XLXI_54 (.I0(XLXN_66), 
                 .I1(Inp[2]), 
                 .O(XLXN_70));
   INV  XLXI_55 (.I(Inp[0]), 
                .O(XLXN_66));
   AND2  XLXI_56 (.I0(Inp[0]), 
                 .I1(Inp[2]), 
                 .O(XLXN_11));
endmodule
`timescale 1ns / 1ps

module counter08_MUSER_main(clk_in, 
                            XLXN_14, 
                            divide_9, 
                            q);

    input clk_in;
    input XLXN_14;
   output divide_9;
   output [3:0] q;
   
   wire XLXN_5;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_12;
   wire [3:0] q_DUMMY;
   
   assign q[3:0] = q_DUMMY[3:0];
   (* HU_SET = "XLXI_1_2" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(clk_in), 
                             .CLR(XLXN_14), 
                             .J(XLXN_10), 
                             .K(XLXN_12), 
                             .Q(q_DUMMY[0]));
   (* HU_SET = "XLXI_2_3" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(clk_in), 
                             .CLR(XLXN_14), 
                             .J(q_DUMMY[0]), 
                             .K(q_DUMMY[0]), 
                             .Q(q_DUMMY[1]));
   (* HU_SET = "XLXI_3_4" *) 
   FJKC_HXILINX_main  XLXI_3 (.C(clk_in), 
                             .CLR(XLXN_14), 
                             .J(XLXN_8), 
                             .K(XLXN_8), 
                             .Q(q_DUMMY[2]));
   (* HU_SET = "XLXI_4_5" *) 
   FJKC_HXILINX_main  XLXI_4 (.C(clk_in), 
                             .CLR(XLXN_14), 
                             .J(XLXN_5), 
                             .K(XLXN_12), 
                             .Q(q_DUMMY[3]));
   AND3  XLXI_5 (.I0(q_DUMMY[2]), 
                .I1(q_DUMMY[1]), 
                .I2(q_DUMMY[0]), 
                .O(XLXN_5));
   VCC  XLXI_6 (.P(XLXN_12));
   AND2  XLXI_7 (.I0(q_DUMMY[1]), 
                .I1(q_DUMMY[0]), 
                .O(XLXN_8));
   INV  XLXI_8 (.I(q_DUMMY[3]), 
               .O(XLXN_10));
   INV  XLXI_9 (.I(q_DUMMY[3]), 
               .O(divide_9));
endmodule
`timescale 1ns / 1ps

module main(P47, 
            P48, 
            A, 
            B, 
            C, 
            com0, 
            com1, 
            com2, 
            com3, 
            D, 
            E, 
            F, 
            G, 
            pinG0, 
            pinG1, 
            pinG2, 
            pinG3, 
            pinG4, 
            pinG5, 
            pinG6, 
            pinG7, 
            pinG8, 
            pinR0, 
            pinR1, 
            pinR2, 
            pinR3, 
            pinR4, 
            pinR5, 
            pinR6, 
            pinR7, 
            pinR8);

    input P47;
    input P48;
   output A;
   output B;
   output C;
   output com0;
   output com1;
   output com2;
   output com3;
   output D;
   output E;
   output F;
   output G;
   output pinG0;
   output pinG1;
   output pinG2;
   output pinG3;
   output pinG4;
   output pinG5;
   output pinG6;
   output pinG7;
   output pinG8;
   output pinR0;
   output pinR1;
   output pinR2;
   output pinR3;
   output pinR4;
   output pinR5;
   output pinR6;
   output pinR7;
   output pinR8;
   
   wire [8:0] Green;
   wire [8:0] Red;
   wire XLXN_127;
   wire XLXN_128;
   wire [3:0] XLXN_155;
   wire XLXN_201;
   wire XLXN_203;
   wire XLXN_204;
   wire XLXN_206;
   wire XLXN_210;
   
   betterBCDto7seg_MUSER_main  XLXI_41 (.Inp(XLXN_155[3:0]), 
                                       .A7(A), 
                                       .B7(B), 
                                       .C7(C), 
                                       .D7(D), 
                                       .E7(E), 
                                       .F7(F), 
                                       .G7(G));
   VCC  XLXI_42 (.P(com1));
   VCC  XLXI_43 (.P(com2));
   VCC  XLXI_44 (.P(com3));
   GND  XLXI_45 (.G(com0));
   counter08_MUSER_main  XLXI_63 (.clk_in(XLXN_127), 
                                 .XLXN_14(), 
                                 .divide_9(), 
                                 .q(XLXN_155[3:0]));
   AND2  XLXI_64 (.I0(XLXN_128), 
                 .I1(P47), 
                 .O(XLXN_127));
   VCC  XLXI_65 (.P(XLXN_128));
   dataToLed_MUSER_main  XLXI_89 (.Data(XLXN_155[3:0]), 
                                 .Selector(XLXN_210), 
                                 .G(Green[8:0]), 
                                 .R(Red[8:0]));
   BUF  XLXI_94 (.I(Red[0]), 
                .O(pinR0));
   BUF  XLXI_95 (.I(Red[1]), 
                .O(pinR1));
   BUF  XLXI_96 (.I(Red[2]), 
                .O(pinR2));
   BUF  XLXI_97 (.I(Red[3]), 
                .O(pinR3));
   BUF  XLXI_98 (.I(Red[4]), 
                .O(pinR4));
   BUF  XLXI_99 (.I(Red[5]), 
                .O(pinR5));
   BUF  XLXI_100 (.I(Red[6]), 
                 .O(pinR6));
   BUF  XLXI_101 (.I(Red[7]), 
                 .O(pinR7));
   BUF  XLXI_102 (.I(Red[8]), 
                 .O(pinR8));
   BUF  XLXI_103 (.I(Green[0]), 
                 .O(pinG0));
   BUF  XLXI_104 (.I(Green[1]), 
                 .O(pinG1));
   BUF  XLXI_105 (.I(Green[2]), 
                 .O(pinG2));
   BUF  XLXI_106 (.I(Green[3]), 
                 .O(pinG3));
   BUF  XLXI_107 (.I(Green[4]), 
                 .O(pinG4));
   BUF  XLXI_108 (.I(Green[5]), 
                 .O(pinG5));
   BUF  XLXI_109 (.I(Green[6]), 
                 .O(pinG6));
   BUF  XLXI_110 (.I(Green[7]), 
                 .O(pinG7));
   BUF  XLXI_111 (.I(Green[8]), 
                 .O(pinG8));
   VCC  XLXI_114 (.P(XLXN_201));
   AND2  XLXI_115 (.I0(XLXN_204), 
                  .I1(P48), 
                  .O(XLXN_203));
   VCC  XLXI_116 (.P(XLXN_204));
   GND  XLXI_117 (.G(XLXN_206));
   (* HU_SET = "XLXI_118_6" *) 
   FJKCE_HXILINX_main  XLXI_118 (.C(XLXN_203), 
                                .CE(XLXN_201), 
                                .CLR(XLXN_206), 
                                .J(XLXN_201), 
                                .K(XLXN_201), 
                                .Q(XLXN_210));
endmodule
