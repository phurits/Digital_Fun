////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 11/23/2021 14:10:36
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/xilinx__workspace/test6/main.vf -w C:/xilinx__workspace/test6/main.sch
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_main(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module round7seg_MUSER_main(inp, 
                            out_0, 
                            out_1, 
                            out_2, 
                            out_3, 
                            out_4, 
                            out_5);

    input [3:0] inp;
   output out_0;
   output out_1;
   output out_2;
   output out_3;
   output out_4;
   output out_5;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_23;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   
   INV  XLXI_1 (.I(inp[2]), 
               .O(XLXN_8));
   INV  XLXI_2 (.I(inp[1]), 
               .O(XLXN_9));
   INV  XLXI_3 (.I(inp[0]), 
               .O(XLXN_10));
   AND3  XLXI_11 (.I0(XLXN_10), 
                 .I1(XLXN_9), 
                 .I2(XLXN_8), 
                 .O(XLXN_11));
   AND2  XLXI_13 (.I0(inp[1]), 
                 .I1(inp[2]), 
                 .O(XLXN_12));
   INV  XLXI_14 (.I(inp[2]), 
                .O(XLXN_15));
   INV  XLXI_15 (.I(inp[1]), 
                .O(XLXN_14));
   AND3  XLXI_16 (.I0(inp[0]), 
                 .I1(XLXN_14), 
                 .I2(XLXN_15), 
                 .O(XLXN_16));
   AND2  XLXI_17 (.I0(XLXN_19), 
                 .I1(inp[1]), 
                 .O(XLXN_20));
   AND2  XLXI_26 (.I0(inp[1]), 
                 .I1(inp[2]), 
                 .O(XLXN_21));
   AND2  XLXI_27 (.I0(inp[0]), 
                 .I1(inp[1]), 
                 .O(XLXN_23));
   AND2  XLXI_28 (.I0(inp[1]), 
                 .I1(inp[2]), 
                 .O(XLXN_27));
   AND2  XLXI_29 (.I0(XLXN_28), 
                 .I1(inp[2]), 
                 .O(XLXN_29));
   INV  XLXI_30 (.I(inp[0]), 
                .O(XLXN_19));
   INV  XLXI_31 (.I(inp[0]), 
                .O(XLXN_28));
   AND2  XLXI_32 (.I0(inp[1]), 
                 .I1(inp[2]), 
                 .O(XLXN_30));
   AND2  XLXI_33 (.I0(inp[0]), 
                 .I1(inp[2]), 
                 .O(XLXN_32));
   AND2  XLXI_34 (.I0(inp[1]), 
                 .I1(inp[2]), 
                 .O(XLXN_31));
   OR2  XLXI_35 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .O(out_0));
   OR2  XLXI_36 (.I0(XLXN_18), 
                .I1(XLXN_16), 
                .O(out_1));
   OR2  XLXI_37 (.I0(XLXN_21), 
                .I1(XLXN_20), 
                .O(out_2));
   OR2  XLXI_38 (.I0(XLXN_27), 
                .I1(XLXN_23), 
                .O(out_3));
   OR2  XLXI_39 (.I0(XLXN_30), 
                .I1(XLXN_29), 
                .O(out_4));
   OR2  XLXI_40 (.I0(XLXN_31), 
                .I1(XLXN_32), 
                .O(out_5));
   AND2  XLXI_41 (.I0(inp[1]), 
                 .I1(inp[2]), 
                 .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module counter05_MUSER_main(clear, 
                            clk_in, 
                            divide_6, 
                            q);

    input clear;
    input clk_in;
   output divide_6;
   output [3:0] q;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_16;
   wire XLXN_20;
   wire [3:0] q_DUMMY;
   
   assign q[3:0] = q_DUMMY[3:0];
   (* HU_SET = "XLXI_1_3" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(clk_in), 
                             .CLR(clear), 
                             .J(XLXN_16), 
                             .K(XLXN_16), 
                             .Q(q_DUMMY[0]));
   (* HU_SET = "XLXI_2_4" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(clk_in), 
                             .CLR(clear), 
                             .J(XLXN_9), 
                             .K(q_DUMMY[0]), 
                             .Q(q_DUMMY[1]));
   (* HU_SET = "XLXI_3_5" *) 
   FJKC_HXILINX_main  XLXI_3 (.C(clk_in), 
                             .CLR(clear), 
                             .J(XLXN_5), 
                             .K(q_DUMMY[0]), 
                             .Q(q_DUMMY[2]));
   AND2  XLXI_4 (.I0(q_DUMMY[1]), 
                .I1(q_DUMMY[0]), 
                .O(XLXN_5));
   AND2  XLXI_5 (.I0(XLXN_6), 
                .I1(q_DUMMY[0]), 
                .O(XLXN_9));
   INV  XLXI_6 (.I(q_DUMMY[2]), 
               .O(XLXN_6));
   GND  XLXI_7 (.G(q_DUMMY[3]));
   AND2  XLXI_8 (.I0(q_DUMMY[0]), 
                .I1(q_DUMMY[2]), 
                .O(XLXN_20));
   VCC  XLXI_9 (.P(XLXN_16));
   INV  XLXI_11 (.I(XLXN_20), 
                .O(divide_6));
endmodule
`timescale 1ns / 1ps

module to_1_2_10_100_1000Hz_MUSER_main(clockIn, 
                                       to1hz, 
                                       to2hz, 
                                       to10hz, 
                                       to100hz, 
                                       to1000hz);

    input clockIn;
   output to1hz;
   output to2hz;
   output to10hz;
   output to100hz;
   output to1000hz;
   
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_73;
   wire XLXN_88;
   wire XLXN_101;
   wire XLXN_115;
   wire XLXN_215;
   wire XLXN_217;
   wire XLXN_233;
   wire XLXN_238;
   wire XLXN_239;
   wire XLXN_240;
   wire XLXN_243;
   
   (* HU_SET = "XLXI_31_6" *) 
   CD4CE_HXILINX_main  XLXI_31 (.C(clockIn), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_43));
   INV  XLXI_32 (.I(XLXN_43), 
                .O(XLXN_49));
   (* HU_SET = "XLXI_33_7" *) 
   CD4CE_HXILINX_main  XLXI_33 (.C(XLXN_49), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_44));
   INV  XLXI_34 (.I(XLXN_44), 
                .O(XLXN_50));
   (* HU_SET = "XLXI_36_8" *) 
   CD4CE_HXILINX_main  XLXI_36 (.C(XLXN_50), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_52));
   INV  XLXI_37 (.I(XLXN_52), 
                .O(XLXN_54));
   (* HU_SET = "XLXI_38_9" *) 
   CD4CE_HXILINX_main  XLXI_38 (.C(XLXN_54), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_53));
   INV  XLXI_39 (.I(XLXN_53), 
                .O(XLXN_101));
   (* HU_SET = "XLXI_52_10" *) 
   CD4CE_HXILINX_main  XLXI_52 (.C(XLXN_101), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_88));
   INV  XLXI_53 (.I(XLXN_88), 
                .O(XLXN_238));
   (* HU_SET = "XLXI_54_11" *) 
   CD4CE_HXILINX_main  XLXI_54 (.C(XLXN_238), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_73));
   INV  XLXI_55 (.I(XLXN_73), 
                .O(XLXN_215));
   (* HU_SET = "XLXI_63_13" *) 
   FJKC_HXILINX_main  XLXI_63 (.C(XLXN_243), 
                              .CLR(), 
                              .J(XLXN_240), 
                              .K(XLXN_240), 
                              .Q(to1hz));
   VCC  XLXI_64 (.P(XLXN_240));
   (* HU_SET = "XLXI_67_12" *) 
   CD4CE_HXILINX_main  XLXI_67 (.C(XLXN_215), 
                               .CE(XLXN_240), 
                               .CLR(), 
                               .CEO(), 
                               .Q0(), 
                               .Q1(), 
                               .Q2(), 
                               .Q3(), 
                               .TC(XLXN_115));
   INV  XLXI_68 (.I(XLXN_115), 
                .O(XLXN_243));
   BUF  XLXI_69 (.I(XLXN_243), 
                .O(to2hz));
   BUF  XLXI_70 (.I(XLXN_217), 
                .O(to10hz));
   BUF  XLXI_71 (.I(XLXN_233), 
                .O(to100hz));
   BUF  XLXI_72 (.I(XLXN_239), 
                .O(to1000hz));
   (* HU_SET = "XLXI_137_14" *) 
   FJKC_HXILINX_main  XLXI_137 (.C(XLXN_215), 
                               .CLR(), 
                               .J(XLXN_240), 
                               .K(XLXN_240), 
                               .Q(XLXN_217));
   (* HU_SET = "XLXI_138_15" *) 
   FJKC_HXILINX_main  XLXI_138 (.C(XLXN_238), 
                               .CLR(), 
                               .J(XLXN_240), 
                               .K(XLXN_240), 
                               .Q(XLXN_233));
   (* HU_SET = "XLXI_139_16" *) 
   FJKC_HXILINX_main  XLXI_139 (.C(XLXN_101), 
                               .CLR(), 
                               .J(XLXN_240), 
                               .K(XLXN_240), 
                               .Q(XLXN_239));
endmodule
`timescale 1ns / 1ps

module main(CLK, 
            A, 
            B, 
            C, 
            Com0, 
            Com1, 
            Com2, 
            Com3, 
            D, 
            E, 
            F);

    input CLK;
   output A;
   output B;
   output C;
   output Com0;
   output Com1;
   output Com2;
   output Com3;
   output D;
   output E;
   output F;
   
   wire XLXN_1;
   wire XLXN_3;
   wire [3:0] XLXN_5;
   wire XLXN_6;
   wire XLXN_13;
   
   (* HU_SET = "XLXI_1_17" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(XLXN_3), 
                             .CLR(XLXN_13), 
                             .J(XLXN_1), 
                             .K(XLXN_1), 
                             .Q(XLXN_6));
   to_1_2_10_100_1000Hz_MUSER_main  XLXI_2 (.clockIn(CLK), 
                                           .to1hz(XLXN_3), 
                                           .to2hz(), 
                                           .to10hz(), 
                                           .to100hz(), 
                                           .to1000hz());
   VCC  XLXI_3 (.P(XLXN_1));
   counter05_MUSER_main  XLXI_4 (.clear(), 
                                .clk_in(XLXN_6), 
                                .divide_6(), 
                                .q(XLXN_5[3:0]));
   round7seg_MUSER_main  XLXI_5 (.inp(XLXN_5[3:0]), 
                                .out_0(A), 
                                .out_1(B), 
                                .out_2(C), 
                                .out_3(D), 
                                .out_4(E), 
                                .out_5(F));
   GND  XLXI_6 (.G(XLXN_13));
   GND  XLXI_7 (.G(Com0));
   VCC  XLXI_8 (.P(Com1));
   VCC  XLXI_9 (.P(Com2));
   VCC  XLXI_10 (.P(Com3));
endmodule
